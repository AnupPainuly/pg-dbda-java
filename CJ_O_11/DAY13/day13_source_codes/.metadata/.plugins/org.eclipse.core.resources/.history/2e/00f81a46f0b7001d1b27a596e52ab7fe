import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Set;
import java.util.TreeMap;


//LinkedHashMap
public class Day13_6 {

	public static void main(String[] args) 
	{
		LinkedHashMap<Integer,String> lhm = new LinkedHashMap<Integer,String>();
		lhm.put(5, "emp1");
		lhm.put(4,"emp2");
		lhm.put(12, "emp3");
		lhm.put(200, "emp4");
		lhm.put(200, "emp5");
		
	}
}



/*
//TreeMap
// unordered
// unsorted
//duplicate keys are not allowed
// it does not allow null keys else NPE

public class Day13_6 {

	public static void main(String[] args) 
	{
		TreeMap<Integer,String> tm = new TreeMap<Integer,String>();
		tm.put(5, "emp1");
		tm.put(4,"emp2");
		tm.put(12, "emp3");
		tm.put(200, "emp4");
		tm.put(200, "emp5");
		//tm.put(null,"emp6"); // NPE 
		System.out.println(tm);
		System.out.println("fetch all the keys");
		Set s = tm.keySet();
		System.out.println(s);
		System.out.println("Contains = "+tm.containsKey(12));
		
		
	}
}

*/


/*
//HashMap
//Unordered
// Unsorted
// duplicate keys are not allowed
// duplicate values are allowed
// null key is allowed but only once
// null values are allowed 

public class Day13_6 {

	public static void main(String[] args) 
	{
		HashMap<Integer,String> hm = new HashMap<Integer,String>();
		hm.put(5, "emp1");
		hm.put(4,"emp2");
		hm.put(12, "emp3");
		hm.put(200, "emp4");
		hm.put(200, "emp5");
		hm.put(350, "emp5");
		hm.put(null, "emp6");
		hm.put(222, null);
		
		System.out.println(hm);
	}

}
*/